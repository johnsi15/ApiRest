<form id="saveProduct" method="post" action="/api/post" enctype="multipart/form-data"> <!-- enctype="multipart/form-data"-->
  <label for="name">Nombre:</label>
  <input type="text" name="name">
  <br><br>
  <label for="picture">Imagen:</label>
  <input type="file" name="picture" id="picture">
  <br><br>
  <label for="price">Precio</label>
  <input type="text" name="price">
  <br><br>
  <label for="category">Categoria:</label>
  <select name="category">
    <option value="computers">Computadores</option>
    <option value="phones">Teléfonos</option>
    <option value="accesories">Accesorios</option>
  </select>
  <br><br>
  <label for="description">Descripción</label>
  <textarea name="description" cols="30" rows="5"></textarea>
  <br><br>
  <input type="submit" value="save">
</form>

<script>
  // const saveProduct = document.querySelector('#saveProduct');
  const saveProduct = document.getElementById('saveProduct');
  // const formData = new FormData(saveProduct);

  const name = document.querySelector("[name=name]");
  const picture = document.querySelector("[name=picture]");
  const price = document.querySelector("[name=price]");
  const category = document.querySelector("[name=category]");
  const description = document.querySelector("[name=description]");

  // const formData = 'name=Prueba23&picture=hp.jpg&price=3000&category=computers&description=Ejemplo+de+post+en+mongodb+con+mongoose'

  // Indicamos que vamos a usar el headers y lo que vamos a mandar
  const myHeaders = new Headers();
  // Entonces endicamos que al headers authorization le vamos agregar el token, 
  // Por defecto se envia authorization: Barer por eso lo hacemos de esa forma con el Barer
  myHeaders.append('authorization', 'Barer '+localStorage.token);
  // myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');
  // myHeaders.append('Content-Type', 'application/json');
  // myHeaders.append('Content-Type', 'multipart/form-data');
  // myHeaders.append('Accept', 'application/json');
  
  saveProduct.addEventListener('submit', event => {
    // event.preventDefault();
    // const formData = 'name='+name.value+'&'+'picture='+picture.value+'&'+'price='+price.value+'&'+'category='+category.value+'&'+'description='+description.value;
    const formData = new FormData(this);
    // console.log(formData)
    // El metodo fetch envia por defecto methods GET,
    // Tener en cuenta de nodemon hay que que resetearlo para que tome los cambios,
    // De los .hbs handlebars

    // fetch('/api/post', {
    //   method: 'POST',
    //   body: formData
    // })
    // .then(res => res.json())
    // .then(data => {
    //   console.log('Esto es la data ', data);
    //   saveProduct.reset();
    // });

    // fetch('/api/post', {
    //   method: 'POST',
    //   headers: myHeaders,
    //   body: formData
    // })
    // .then(res => res.json())
    // .then(data => {
    //   console.log('Esto es la data ', data);
    //   saveProduct.reset();
    // });
  });
</script>

